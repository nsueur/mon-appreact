{"version":3,"sources":["composants/Button.js","composants/PrimaryButton.js","composants/SecondaryButton.js","composants/Column2.js","Calculator.js","composants/ProductRow.js","composants/ProductCategoryRow.js","FilterableProductsTable.js","App.js","reportWebVitals.js","index.js"],"names":["Button","type","children","className","PrimaryButton","SecondaryButton","Column2","left","right","scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","BoilingVerdict","tryConvert","temperature","convert","value","parseFloat","Number","isNaN","Math","round","toString","TemperatureInput","props","handleChange","bind","e","this","onTemperatureChange","target","name","scale","scaleName","htmlFor","id","onChange","Component","Calculator","state","handleCelsiusChange","handleFahrenheitChange","setState","ProductRow","product","stocked","price","ProductCategoryRow","category","colSpan","ProductTable","products","filterText","inStockOnly","rows","lastCategory","forEach","indexOf","push","Category","SearchBar","handleFilterTextChange","handleInStockChange","onFilterTextChange","onStockChange","checked","placeholder","FilterableProductsTable","Fragment","PRODUCTS","App","to","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14be4a2f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Button({type, children}){\r\n    const className=\"btn btn-\" + type\r\n    return <button className={className}>{children}</button>\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport Button from './Button'\r\n\r\nfunction PrimaryButton({children}){\r\n    return <Button type=\"primary\">{children}</Button>\r\n}\r\n\r\nexport default PrimaryButton\r\n\r\n","import React from 'react'\r\nimport Button from './Button'\r\n\r\nfunction SecondaryButton({children}){\r\n    return <Button type=\"secondary\">{children}</Button>\r\n}\r\n\r\nexport default SecondaryButton\r\n","import React from 'react'\r\n\r\nfunction Column2({left, right}){\r\n    return <div className=\"row\">\r\n        <div className=\"col-md-6\">{left}</div>\r\n        <div className=\"col-md-6\">{right}</div>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default Column2","import React, {Component} from 'react'\r\nimport PrimaryButton from './composants/PrimaryButton'\r\nimport SecondaryButton from './composants/SecondaryButton'\r\nimport Column2 from './composants/Column2'\r\n\r\nconst scaleNames ={\r\n    c: 'Celsius',\r\n    f: 'Fahrenheit'\r\n}\r\n\r\n/**\r\n * \r\n * T(°F) = T°(°C) x 9/5 + 32 \r\n * T(°C) = (T(°F) - 32) x 5/9\r\n */\r\n\r\nfunction toCelsius (fahrenheit){\r\n    return (fahrenheit - 32) * 5/9\r\n}\r\n\r\n\r\nfunction toFahrenheit (celsius){\r\n    return ( celsius * 9/5 ) + 32\r\n}\r\n\r\n\r\n\r\nfunction BoilingVerdict ({celsius}) {\r\n    if(celsius >= 100)\r\n    {\r\n        return <div className=\"alert alert-success\" >L'eau bout</div>\r\n    }\r\n    return <div className=\"alert alert-info\" >L'eau ne bout pas</div>\r\n    \r\n}\r\n\r\n\r\n\r\nfunction tryConvert (temperature, convert)\r\n{\r\n    const value = parseFloat(temperature)\r\n    if(Number.isNaN(value))\r\n    {\r\n        return '';\r\n    }\r\n    \r\n    return (Math.round(convert(value)*100) /100).toString()\r\n}\r\n\r\n\r\n\r\nclass TemperatureInput extends Component {\r\n    constructor (props)\r\n    {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this)\r\n\r\n    }\r\n\r\n    handleChange (e){\r\n         this.props.onTemperatureChange(e.target.value)\r\n    }\r\n\r\n    render (){\r\n        const {temperature} = this.props\r\n        const name =\"scale\" + this.props.scale\r\n        const scaleName = scaleNames[this.props.scale]\r\n        return <div className=\"from-group\">\r\n                    <label htmlFor={name} >Température (en {scaleName})</label>\r\n                    <input type=\"text\" id={name} value={temperature} className=\"form-control\" onChange={this.handleChange} />\r\n                </div>\r\n    }\r\n}\r\n\r\nclass Calculator extends Component {\r\n    constructor (props){\r\n        super(props)\r\n        this.state = {\r\n            scale: 'c',\r\n            temperature: 20\r\n        }\r\n        this.handleCelsiusChange = this.handleCelsiusChange.bind(this)\r\n        this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this)\r\n    }\r\n\r\n    handleCelsiusChange (temperature){\r\n        this.setState({\r\n            scale: 'c',\r\n            temperature\r\n        })\r\n    }\r\n\r\n    handleFahrenheitChange (temperature){\r\n        this.setState({\r\n            scale: 'f',\r\n            temperature\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    render (){\r\n        const {temperature, scale} = this.state\r\n        const celsius = scale === 'c' ? temperature : tryConvert(temperature, toCelsius)\r\n        const fahrenheit = scale === 'f' ? temperature : tryConvert(temperature, toFahrenheit)\r\n        return <div>\r\n            <Column2\r\n                left={ <TemperatureInput scale=\"c\" temperature={celsius} onTemperatureChange = {this.handleCelsiusChange} />}\r\n                right={<TemperatureInput scale=\"f\" temperature={fahrenheit} onTemperatureChange = {this.handleFahrenheitChange} />}\r\n            />\r\n            <BoilingVerdict celsius={parseFloat(celsius)} />\r\n            <PrimaryButton>Envoyer</PrimaryButton>\r\n            <SecondaryButton>Envoyer</SecondaryButton>\r\n        </div>\r\n    }\r\n    \r\n}\r\n\r\nexport default Calculator","import React from 'react'\r\n\r\nfunction ProductRow ({product}){\r\n    \r\n    const name = product.stocked ? product.name : <span className=\"text-danger\">{product.name}</span>\r\n    return <tr>\r\n        <td>{name}</td>\r\n        <td>{product.price}</td>\r\n    </tr>\r\n}\r\n\r\nexport default ProductRow","import React from 'react'\r\n\r\nfunction ProductCategoryRow ({category}){\r\n   \r\n    return <tr>\r\n        <th colSpan=\"2\">{category}</th>\r\n    </tr>\r\n}\r\n\r\nexport default ProductCategoryRow","import React, {Component} from 'react'\r\nimport ProductRow from './composants/ProductRow'\r\nimport ProductCategoryRow from './composants/ProductCategoryRow'\r\n\r\n\r\n\r\n\r\nfunction ProductTable ({products, filterText, inStockOnly}){\r\n    const rows = []\r\n    let lastCategory = null\r\n    \r\n   \r\n    products.forEach(product =>{\r\n        if((inStockOnly && !product.stocked) || product.name.indexOf(filterText)){\r\n            return\r\n        }\r\n\r\n        if(product.category !== lastCategory){\r\n            lastCategory = product.category\r\n\r\n            rows.push( <ProductCategoryRow key={lastCategory} category = {product.Category}  />)\r\n        }\r\n        \r\n       rows.push(<ProductRow key={product.name} product={product} />)\r\n        \r\n    })\r\n   \r\n    return <table className=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th>Nom</th>\r\n                <th>Prix</th>\r\n            </tr>\r\n        \r\n        </thead> \r\n        <tbody>{rows}</tbody>\r\n    </table>\r\n    \r\n}\r\n\r\nclass SearchBar extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\r\n        this.handleInStockChange = this.handleInStockChange.bind(this)\r\n    }\r\n\r\n    handleFilterTextChange(e){\r\n\r\n        this.props.onFilterTextChange(e.target.value)\r\n    }\r\n\r\n    handleInStockChange(e){\r\n        this.props.onStockChange(e.target.checked)\r\n    }\r\n\r\n\r\n    render (){\r\n        \r\n        const {filterText, inStockOnly} =this.props\r\n        return <div className=\"mb-3\">\r\n            <div className=\"form-group\">\r\n        <input type=\"text\" className=\"form-control\" placeholder=\"Rechercher\" value={filterText} onChange = {this.handleFilterTextChange} />\r\n            </div>\r\n            <div className=\"form-check\">\r\n                <input type=\"checkbox\" name=\"\" id=\"stock\" checked={inStockOnly} className=\"form-check-input\" onChange = {this.handleInStockChange}  />\r\n                <label htmlFor=\"stock\" className=\"form-check-label\">Produit en stock seulement</label>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nclass FilterableProductsTable extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            filterText: \"\",\r\n            inStockOnly: false\r\n        }\r\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\r\n        this.handleInStockChange = this.handleInStockChange.bind(this)\r\n    }\r\n\r\n    handleFilterTextChange(filterText){\r\n         this.setState({filterText})\r\n    }\r\n\r\n    handleInStockChange(inStockOnly){\r\n        this.setState({inStockOnly})\r\n    }\r\n   \r\n    render (){\r\n         const {products} = this.props\r\n       \r\n        return <React.Fragment>\r\n           \r\n            <SearchBar\r\n            filterText= {this.state.filterText}\r\n            inStockOnly= {this.state.inStockOnly}\r\n            onFilterTextChange = {this.handleFilterTextChange}\r\n            onStockChange ={this.handleInStockChange}\r\n             />\r\n            <ProductTable \r\n            products={products}\r\n            filterText ={this.state.filterText}\r\n            inStockOnly= {this.state.inStockOnly}\r\n            \r\n            />\r\n        </React.Fragment>\r\n        \r\n    }\r\n}\r\n\r\nexport default FilterableProductsTable","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Calculator from './Calculator'\nimport FilterableProductsTable from './FilterableProductsTable'\n\nconst PRODUCTS = [\n  {category: \"Sporting Goods\", price: \"$49.99\", stocked: true, name: \"Football\"},\n  {category: \"Sporting Goods\", price: \"$9.99\", stocked: true, name: \"Baseball\"},\n  {category: \"Sporting Goods\", price: \"$29.99\", stocked: false, name: \"Basketball\"},\n  {category: \"Electronics\", price: \"$99.99\", stocked: true, name: \"iPod Touch\"},\n  {category: \"Electronics\", price: \"$399.99\", stocked: false, name: \"iPhone 5\"},\n  {category: \"Electronics\", price: \"$199.99\", stocked: true, name: \"Nexus 7\"}\n];\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Convertisseur Celsius - Fahrenheit</Link>\n            </li>\n            <li>\n              <Link to=\"/liste\">Liste de produits</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n  \n        <Switch>\n      \n          <Route path=\"/liste\" >\n            <FilterableProductsTable products={PRODUCTS} />\n          </Route>\n          <Route path=\"/\" component={Calculator} />\n          \n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}